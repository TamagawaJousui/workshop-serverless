service: serverless-typescript-starter
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs20.x

functions:
  hello:
    handler: src/hello.handler
    events:
      - http:
          path: /hello
          method: get
  addUser:
    handler: src/users/addUser.handler
    events:
      - http:
          path: /users/register
          method: post
          request:
            schemas:
              application/json: ${file(./src/models/add_user_request.json)}
  authUser:
    handler: src/users/authUser.handler
    events:
      - http:
          path: /users/auth
          method: post
          request:
            schemas:
              application/json: ${file(./src/models/auth_user_request.json)}
  addWorkshop:
    handler: src/workshops/addWorkshop.handler
    events:
      - http:
          path: /workshops/
          method: post
          request:
            schemas:
              application/json: ${file(./src/models/add_edit_workshop_request.json)}
            parameters:
              headers:
                Authorization: true
  getWorkshopDetail:
    handler: src/workshops/getWorkshopDetail.handler
    events:
      - http:
          path: /workshops/{workshop_UUID}
          method: get
          request:
            parameters:
              paths:
                workshop_UUID: true
  listWorkshopDetails:
    handler: src/workshops/listWorkshopDetails.handler
    events:
      - http:
          path: /workshops/
          method: get
          request:
            parameters:
              querystrings:
                status: false
  editWorkshopDetail:
    handler: src/workshops/editWorkshopDetail.handler
    events:
      - http:
          path: /workshops/{workshop_UUID}
          method: put
          request:
            parameters:
              paths:
                workshop_UUID: true
              headers:
                Authorization: true
            schemas:
              application/json: ${file(./src/models/add_edit_workshop_request.json)}
  deleteWorkshop:
    handler: src/workshops/deleteWorkshop.handler
    events:
      - http:
          path: /workshops/{workshop_UUID}
          method: delete
          request:
            parameters:
              paths:
                workshop_UUID: true
              headers:
                Authorization: true
  workshopParticipate:
    handler: src/workshops/participate.handler
    events:
      - http:
          path: /workshops/{workshop_UUID}/participants/{user_email}
          method: post
          request:
            parameters:
              paths:
                workshop_UUID: true
                user_email: true
              headers:
                Authorization: true
  workshopCancelParticipate:
    handler: src/workshops/cancelParticipate.handler
    events:
      - http:
          path: /workshops/{workshop_UUID}/participants/{user_email}
          method: delete
          request:
            parameters:
              paths:
                workshop_UUID: true
                user_email: true
  workshopListParticipants:
    handler: src/workshops/listParticipants.handler
    events:
      - http:
          path: /workshops/{workshop_UUID}/participants/
          method: get
          request:
            parameters:
              paths:
                workshop_UUID: true
  workshopPostReview:
    handler: src/workshops/postReview.handler
    events:
      - http:
          path: /workshops/reviews/
          method: post
          request:
            schemas:
              application/json: ${file(./src/models/review_create.json)}

plugins:
  - serverless-esbuild
  - serverless-offline
